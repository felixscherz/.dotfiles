- name: Check pyenv installed
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.pyenv"
  register: pyenv_install
- name: Download pyenv installer
  ansible.builtin.get_url:
    mode: '0755'
    url: https://pyenv.run
    dest: /tmp/pyenv_install.sh
  when: not pyenv_install.stat.exists
- name: Install pyenv with installer
  ansible.builtin.command: /tmp/pyenv_install.sh
  when: not pyenv_install.stat.exists
  changed_when: not pyenv_install.stat.exists
- name: Remove pyenv installer
  ansible.builtin.file:
    path: /tmp/pyenv_install.sh
    state: absent
- name: Install pyenv-virtualenv
  ansible.builtin.git:
    repo: https://github.com/pyenv/pyenv-virtualenv.git
    version: v1.2.1
    dest: "{{ ansible_user_dir }}/.pyenv/plugins/pyenv-virtualenv"
- name: Set pyenv path
  ansible.builtin.set_fact:
    felixws_pyenv: "{{ ansible_user_dir }}/.pyenv/bin/pyenv"
- name: Set python versions
  ansible.builtin.set_fact:
    python_versions:
      - '3.9.14'
      - '3.10.7'
      - '3.11.3'
- name: Install python
  ansible.builtin.command:
    cmd: pyenv install {{ version }}
    creates: "{{ ansible_user_dir }}/.pyenv/versions/{{ version }}"
  loop_control:
    loop_var: version
  with_items: "{{ python_versions }}"
  register: install_python
- name: Set pyenv versions
  ansible.builtin.copy:
    mode: '0644'
    src: version
    dest: "{{ ansible_user_dir }}/.pyenv/version"
- name: Install virtualenv
  ansible.builtin.pip:
    name: virtualenv
- name: Install pipx
  ansible.builtin.pip:
    name: pipx
- name: Set global python interpreter
  ansible.builtin.set_fact:
    python_interpreter: "{{ ansible_user_dir }}/.pyenv/versions/3.10.7/bin/pipx"
